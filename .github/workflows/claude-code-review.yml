name: Claude Code Review

# This workflow triggers when @claude is mentioned in PR comments
on:
  issue_comment:
    types: [created]

jobs:
  claude-review:
    # Only run on PR comments (not issue comments) when @claude is mentioned
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '@claude')
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Custom instructions for Japanese code reviews
          custom_instructions: |
            **重要: このレビューは必ず日本語で実施してください。すべてのコメント、フィードバック、提案を日本語で記述してください。**
            
            このプルリクエスト（PR）をレビューし、以下の観点から詳細なフィードバックを提供してください。
            
            **コメントの書き方:**
            * **結論を先に:** 各指摘事項の冒頭で、要点を一行で簡潔に述べてください。
            * **理由と提案:** 結論の後に、そのように判断した理由や背景、具体的な修正案を詳しく説明してください。
            * **建設的に:** 改善点を指摘する際は、具体的な解決策も提示してください。

            **レビューの観点:**
            - CLAUDE.mdのガイドラインに従っているか
            - バグやセキュリティリスクがないか
            - 保守性や可読性は十分か
            - 設計やアーキテクチャに妥当性があるか
            - コード品質とベストプラクティス
            - 潜在的なバグや問題
            - セキュリティの懸念
            - テストカバレッジ
            
            **フィードバック形式:**
            - 各指摘事項をファイル名と行番号（可能な場合）と共に明記
            - 重要度を明示（🔴 重大、🟡 中程度、🟢 軽微）
            - 具体的なコード例やsuggestionを含める
            
            すべてのフィードバックは日本語で、建設的かつ実用的な内容にしてください。
            
            **再度強調: このレビュー全体を通じて、すべてのコメントとフィードバックは日本語で記述することが必須です。英語でのコメントは禁止されています。**

          # Use sticky comments to update the same comment
          use_sticky_comment: true
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

