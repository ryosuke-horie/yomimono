name: Auto Labeling with Claude

on:
  schedule:
    # 毎日午前9時（JST）に実行
    - cron: '0 0 * * *'
  workflow_dispatch: # 手動実行もサポート
    inputs:
      dry_run:
        description: 'テストモード（実際の更新を行わない）'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      max_articles:
        description: '処理する最大記事数（空の場合は全て）'
        required: false
        default: ''
        type: string

jobs:
  auto-label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install and Build MCP
        id: build-mcp
        run: |
          cd mcp
          pnpm install
          pnpm run build
          echo "MCPビルド完了"
          echo "build_status=success" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Validate MCP Build
        if: steps.build-mcp.outputs.build_status != 'success'
        run: |
          echo "::error::MCPのビルドに失敗しました"
          exit 1

      - name: Run Claude Auto Labeling (Attempt 1)
        id: claude-labeling-1
        uses: anthropics/claude-code-action@beta
        continue-on-error: true
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # MCPサーバー設定
          mcp_servers: |
            {
              "effective-yomimono-mcp": {
                "command": "node",
                "args": ["${{ github.workspace }}/mcp/build/index.js"],
                "env": {
                  "API_BASE_URL": "https://effective-yomimono-api.ryosuke-horie37.workers.dev"
                }
              }
            }
          
          # Direct prompt for automated labeling
          direct_prompt: |
            MCPツールを使用して記事の自動ラベル付けを実行してください。
            
            環境設定：
            - テストモード: ${{ github.event.inputs.dry_run || 'false' }}
            - 最大処理記事数: ${{ github.event.inputs.max_articles || '制限なし' }}
            
            以下の手順で処理を行ってください：
            
            1. まず、getLabels ツールを使用して既存のラベル一覧を取得してください。
            2. 次に、getUnlabeledArticles ツールを使用してラベル付けされていない記事を取得してください。
            3. ${{ github.event.inputs.max_articles && format('最大{0}件の記事を処理してください。', github.event.inputs.max_articles) || '全ての未ラベル記事を処理してください。' }}
            4. 各記事に対して、タイトルと内容から最も適切なラベルを判定してください。
               - 技術系記事の場合: プログラミング言語、フレームワーク、ツール名などから判定
               - 概念的な記事の場合: アーキテクチャ、設計パターン、ベストプラクティスなどから判定
            5. ${{ github.event.inputs.dry_run == 'true' && 'テストモードのため、実際のラベル付けは行わず、判定結果のみ報告してください。' || 'assignLabel ツールを使用して、判定したラベルを記事に割り当ててください。' }}
            6. 複数の記事に同じラベルを付ける場合は、assignLabelsToMultipleArticles ツールを使用して効率化してください。
            
            処理結果として以下を必ず報告してください：
            - 処理対象記事の総数
            - 処理完了記事数
            - 付与したラベルの内訳（ラベル名: 記事数）
            - 新規作成したラベル（もしあれば）
            - ラベル付けできなかった記事（もしあれば）とその理由
            - エラーが発生した場合はその詳細
            
            出力形式：
            ```summary
            処理結果サマリー:
            - 処理対象: X件
            - 処理完了: Y件
            - 処理失敗: Z件
            ```
            
            注意事項：
            - 既存のラベルをできるだけ活用してください
            - 新しいラベルは本当に必要な場合のみ作成してください
            - ラベル名は簡潔で分かりやすいものにしてください
            - エラーが発生した場合は詳細を報告してください

      - name: Run Claude Auto Labeling (Retry - Attempt 2)
        if: steps.claude-labeling-1.outcome == 'failure'
        id: claude-labeling-2
        uses: anthropics/claude-code-action@beta
        continue-on-error: true
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # MCPサーバー設定
          mcp_servers: |
            {
              "effective-yomimono-mcp": {
                "command": "node",
                "args": ["${{ github.workspace }}/mcp/build/index.js"],
                "env": {
                  "API_BASE_URL": "https://effective-yomimono-api.ryosuke-horie37.workers.dev"
                }
              }
            }
          
          # Direct prompt for automated labeling (retry)
          direct_prompt: |
            【リトライ実行】MCPツールを使用して記事の自動ラベル付けを実行してください。
            
            環境設定：
            - テストモード: ${{ github.event.inputs.dry_run || 'false' }}
            - 最大処理記事数: ${{ github.event.inputs.max_articles || '制限なし' }}
            - リトライ回数: 2回目
            
            以下の手順で処理を行ってください：
            
            1. まず、getLabels ツールを使用して既存のラベル一覧を取得してください。
            2. 次に、getUnlabeledArticles ツールを使用してラベル付けされていない記事を取得してください。
            3. ${{ github.event.inputs.max_articles && format('最大{0}件の記事を処理してください。', github.event.inputs.max_articles) || '全ての未ラベル記事を処理してください。' }}
            4. 各記事に対して、タイトルと内容から最も適切なラベルを判定してください。
            5. ${{ github.event.inputs.dry_run == 'true' && 'テストモードのため、実際のラベル付けは行わず、判定結果のみ報告してください。' || 'assignLabel ツールを使用して、判定したラベルを記事に割り当ててください。' }}
            
            処理結果として以下を必ず報告してください：
            - 処理対象記事の総数
            - 処理完了記事数
            - エラーが発生した場合はその詳細
            
            ```summary
            処理結果サマリー:
            - 処理対象: X件
            - 処理完了: Y件
            - 処理失敗: Z件
            ```

      - name: Run Claude Auto Labeling (Final Retry - Attempt 3)
        if: steps.claude-labeling-1.outcome == 'failure' && steps.claude-labeling-2.outcome == 'failure'
        id: claude-labeling-3
        uses: anthropics/claude-code-action@beta
        continue-on-error: true
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # MCPサーバー設定
          mcp_servers: |
            {
              "effective-yomimono-mcp": {
                "command": "node",
                "args": ["${{ github.workspace }}/mcp/build/index.js"],
                "env": {
                  "API_BASE_URL": "https://effective-yomimono-api.ryosuke-horie37.workers.dev"
                }
              }
            }
          
          # Direct prompt for automated labeling (final retry)
          direct_prompt: |
            【最終リトライ実行】MCPツールを使用して記事の自動ラベル付けを実行してください。
            
            環境設定：
            - テストモード: ${{ github.event.inputs.dry_run || 'false' }}
            - 最大処理記事数: ${{ github.event.inputs.max_articles || '10' }}（最終リトライのため制限）
            - リトライ回数: 3回目（最終）
            
            最小限の処理でも良いので、確実に動作させてください：
            
            1. getLabels ツールを使用して既存のラベル一覧を取得
            2. getUnlabeledArticles ツールを使用して未ラベル記事を取得
            3. 最大10件の記事のみ処理
            4. ${{ github.event.inputs.dry_run == 'true' && 'テストモードのため、判定結果のみ報告' || 'assignLabel で記事にラベル付け' }}
            
            簡潔な結果報告：
            - 処理件数: X件
            - 成功/失敗

      - name: Determine Final Status
        id: final-status
        run: |
          if [[ "${{ steps.claude-labeling-1.outcome }}" == "success" ]]; then
            echo "final_outcome=success" >> $GITHUB_OUTPUT
            echo "attempt_count=1" >> $GITHUB_OUTPUT
            echo "::notice::自動ラベル付けが正常に完了しました（1回目の試行で成功）"
          elif [[ "${{ steps.claude-labeling-2.outcome }}" == "success" ]]; then
            echo "final_outcome=success" >> $GITHUB_OUTPUT
            echo "attempt_count=2" >> $GITHUB_OUTPUT
            echo "::warning::自動ラベル付けが完了しました（2回目の試行で成功）"
          elif [[ "${{ steps.claude-labeling-3.outcome }}" == "success" ]]; then
            echo "final_outcome=success" >> $GITHUB_OUTPUT
            echo "attempt_count=3" >> $GITHUB_OUTPUT
            echo "::warning::自動ラベル付けが完了しました（3回目の試行で成功）"
          else
            echo "final_outcome=failure" >> $GITHUB_OUTPUT
            echo "attempt_count=3" >> $GITHUB_OUTPUT
            echo "::error::自動ラベル付けが失敗しました（3回の試行全て失敗）"
          fi

      - name: Generate Job Summary
        if: always()
        run: |
          echo "# 📋 自動ラベル付け実行結果" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.final-status.outputs.final_outcome }}" == "success" ]]; then
            echo "✅ **ステータス**: 成功" >> $GITHUB_STEP_SUMMARY
            echo "🔄 **試行回数**: ${{ steps.final-status.outputs.attempt_count }}回" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **ステータス**: 失敗" >> $GITHUB_STEP_SUMMARY
            echo "🔄 **試行回数**: 3回（全て失敗）" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 実行設定" >> $GITHUB_STEP_SUMMARY
          echo "- **実行モード**: ${{ github.event_name == 'schedule' && '定期実行' || '手動実行' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **テストモード**: ${{ github.event.inputs.dry_run || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **最大処理記事数**: ${{ github.event.inputs.max_articles || '制限なし' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **実行日時**: $(date '+%Y-%m-%d %H:%M:%S JST' -d '+9 hours')" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 各試行の結果" >> $GITHUB_STEP_SUMMARY
          echo "| 試行 | 結果 |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|" >> $GITHUB_STEP_SUMMARY
          echo "| 1回目 | ${{ steps.claude-labeling-1.outcome == 'success' && '✅ 成功' || steps.claude-labeling-1.outcome == 'skipped' && '⏭️ スキップ' || '❌ 失敗' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 2回目 | ${{ steps.claude-labeling-2.outcome == 'success' && '✅ 成功' || steps.claude-labeling-2.outcome == 'skipped' && '⏭️ スキップ' || '❌ 失敗' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 3回目 | ${{ steps.claude-labeling-3.outcome == 'success' && '✅ 成功' || steps.claude-labeling-3.outcome == 'skipped' && '⏭️ スキップ' || '❌ 失敗' }} |" >> $GITHUB_STEP_SUMMARY

      - name: Create Issue on Failure
        if: steps.final-status.outputs.final_outcome == 'failure' && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            const title = `🚨 自動ラベル付けワークフロー失敗 - ${new Date().toISOString().split('T')[0]}`;
            const body = `
            ## エラー概要
            
            自動ラベル付けワークフローが3回の試行すべてで失敗しました。
            
            ### 実行情報
            - **ワークフロー実行**: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - **実行日時**: ${new Date().toLocaleString('ja-JP', { timeZone: 'Asia/Tokyo' })}
            - **トリガー**: 定期実行（毎日午前9時 JST）
            
            ### 対応が必要な項目
            - [ ] エラーログの確認
            - [ ] APIの状態確認
            - [ ] MCP設定の確認
            - [ ] Claude Code OAuth トークンの有効性確認
            
            ### 関連リンク
            - [ワークフローファイル](${{ github.server_url }}/${{ github.repository }}/blob/main/.github/workflows/auto-labeling.yml)
            - [実行履歴](${{ github.server_url }}/${{ github.repository }}/actions/workflows/auto-labeling.yml)
            
            cc: @${{ github.repository_owner }}
            `;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'workflow', 'auto-labeling']
            });

      - name: Final Validation
        if: steps.final-status.outputs.final_outcome == 'failure'
        run: |
          echo "::error::自動ラベル付けワークフローが失敗しました。詳細はジョブサマリーを確認してください。"
          exit 1