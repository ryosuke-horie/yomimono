# DISABLED: GitHub Actions無料枠制限により一時的に無効化
# 有効化時は .disabled 拡張子を削除して workflows/ ディレクトリに戻してください
name: CI (GitHub-hosted Runner) - DISABLED

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# 同一ブランチでの並列実行を制限
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: test
  CI: true

jobs:
  # E2E テスト（フロントエンド）- 軽量化版
  frontend-e2e:
    name: Frontend E2E Tests (Chrome Only)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        # Disable cache to ensure clean install of native modules
        # cache: 'npm'

    - name: Install frontend dependencies
      run: |
        # Clean install to ensure all native binaries are properly installed
        rm -rf node_modules package-lock.json
        npm install --force --verbose
        # Explicitly rebuild native modules for current platform
        npm rebuild

    - name: Install API dependencies
      working-directory: ./api
      run: |
        rm -rf node_modules package-lock.json
        npm install --force

    - name: Install Playwright (Chrome only)
      run: |
        # Chromeのみインストールして軽量化
        npx playwright install chromium
        npx playwright install-deps chromium

    - name: Setup environment for E2E
      run: |
        # Create .env file for E2E tests
        echo "NEXT_PUBLIC_API_BASE_URL=http://localhost:8787" > .env

    - name: Start test servers
      run: |
        # バックグラウンドでサーバー起動
        npm run servers:start &
        SERVER_PID=$!
        echo "Server process started with PID: $SERVER_PID"
        
        # サーバー起動の待機（最大60秒）
        echo "Waiting for servers to start..."
        for i in {1..60}; do
          sleep 1
          if curl -s http://localhost:3000 >/dev/null 2>&1 && curl -s http://localhost:8787/health >/dev/null 2>&1; then
            echo "✅ Both servers are ready after ${i} seconds"
            break
          fi
          if [ $i -eq 60 ]; then
            echo "❌ Servers failed to start within 60 seconds"
            echo "Frontend status:"
            curl -I http://localhost:3000 || echo "Frontend not accessible"
            echo "API status:"
            curl -I http://localhost:8787/health || echo "API not accessible"
            exit 1
          fi
        done
      env:
        NODE_ENV: test

    - name: Run E2E tests (Chrome only, essential scenarios)
      run: |
        # 軽量化：必須シナリオのみ実行（CI環境では自動的にchromiumのみ）
        npx playwright test e2e/tests/essential-scenarios.spec.ts
      env:
        CI: true

    - name: Upload E2E test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-results
        path: |
          ./frontend/test-results/
          ./frontend/playwright-report/
        retention-days: 7


  # 統合結果レポート
  integration-summary:
    name: GitHub-hosted Integration Summary
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [frontend-e2e]
    if: always()

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Generate test summary
      run: |
        echo "## GitHub-hosted CI Results Summary" > test-summary.md
        echo "" >> test-summary.md
        
        # 各ジョブの結果を集計
        echo "### Test Results" >> test-summary.md
        echo "- Frontend E2E Tests: ${{ needs.frontend-e2e.result }}" >> test-summary.md
        echo "" >> test-summary.md
        echo "**Note**: All lint, unit tests, build tests, and security audits run on self-hosted runners separately" >> test-summary.md
        echo "" >> test-summary.md
        
        # ブランチ情報
        echo "### Build Information" >> test-summary.md
        echo "- Branch: \`${{ github.ref_name }}\`" >> test-summary.md
        echo "- Commit: \`${{ github.sha }}\`" >> test-summary.md
        echo "- Triggered by: ${{ github.event_name }}" >> test-summary.md
        echo "- Runner: GitHub-hosted (ubuntu-latest)" >> test-summary.md
        
        cat test-summary.md

    - name: Upload summary
      uses: actions/upload-artifact@v4
      with:
        name: github-hosted-ci-summary
        path: test-summary.md
        retention-days: 30

    - name: Job status check
      run: |
        if [[ "${{ needs.frontend-e2e.result }}" == "failure" ]]; then
          echo "❌ GitHub-hosted CI failed - E2E tests failed"
          exit 1
        else
          echo "✅ GitHub-hosted CI E2E tests completed successfully"
        fi